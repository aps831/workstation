---
# asdf
- name: install terraform asdf plugin
  ansible.builtin.command: asdf plugin-add terraform {{ terraform_asdf_plugin_url }}
  ignore_errors: true

- name: set global terraform version to system
  ansible.builtin.command: asdf global terraform system

# tflint
- name: create temporary file for tflint download
  tempfile:
    state: file
    suffix: temp
  register: tflint_download_tmp

- name: download tflint binary
  get_url:
    url: "{{ tflint_url }}"
    dest: "{{ tflint_download_tmp.path }}"
    force: yes
  changed_when: false

- name: extract tflint from archive
  become: yes
  unarchive:
    src: "{{ tflint_download_tmp.path }}"
    dest: /usr/local/bin
    remote_src: yes
    owner: root
    group: root
    mode: 0755

# terraform docs
- name: create temporary file for terraform docs download
  tempfile:
    state: file
    suffix: temp
  register: terraform_docs_download_tmp

- name: download terraform docs binary
  get_url:
    url: "{{ terraform_docs_url }}"
    dest: "{{ terraform_docs_download_tmp.path }}"
    force: yes
  changed_when: false

- name: extract terraform doc from archive
  become: yes
  unarchive:
    src: "{{ terraform_docs_download_tmp.path }}"
    include: "terraform-docs"
    dest: /usr/local/bin
    remote_src: yes
    owner: root
    group: root
    mode: 0755

# tfsec
- name: download tfsec binary
  become: yes
  get_url:
    url: "{{ tfsec_url }}"
    dest: /usr/local/bin/tfsec
    force: yes
  changed_when: false

- name: make tfsec binary executable
  become: yes
  file:
    path: /usr/local/bin/tfsec
    state: file
    owner: root
    group: root
    mode: 0755

# terragrunt
- name: download terragrunt binary
  become: yes
  get_url:
    url: "{{ terragrunt_url }}"
    dest: /usr/local/bin/terragrunt
    force: yes
  changed_when: false

- name: make terragrunt binary executable
  become: yes
  file:
    path: /usr/local/bin/terragrunt
    state: file
    owner: root
    group: root
    mode: 0755
