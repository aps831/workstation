---
- name: install backup packages
  become: true
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - cron
      - timeshift
      - rclone
      - rclone-browser

- name: "create rclone config directory"
  become: true
  file:
    path: "/home/{{ backup_user }}/.config/rclone"
    state: directory
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: "0700"
    recurse: yes

- name: "create rclone log file"
  become: true
  copy:
    content: ""
    dest: "/var/log/rclone.log"
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: "0666"

- name: "install {{ backup_user }} filters"
  become: true
  ansible.builtin.copy:
    src: "{{ backup_host }}/{{ backup_user }}/filters.txt"
    dest: "/home/{{ backup_user }}/.config/rclone/filters.txt"
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: "0600"

- name: "install {{ backup_user }} config"
  become: true
  template:
    src: "rclone.conf.j2"
    dest: "/home/{{ backup_user }}/.config/rclone/rclone.conf"
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: "0600"

- name: "install {{ backup_user }} backup script"
  become: true
  template:
    src: "backup.sh.j2"
    dest: "/usr/local/sbin/rclone_{{ backup_user }}_backup.sh"
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: "0700"

- name: "install {{ backup_user }} backup service"
  become: true
  template:
    src: "backup.service.j2"
    dest: "/etc/systemd/system/rclone_{{ backup_user }}_backup.service"
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: 0644

- name: enable rclone_{{ backup_user }}_backup service at boot
  become: true
  systemd:
    name: rclone_{{ backup_user }}_backup
    enabled: yes
  notify: restart rclone backup

- name: "install rotation script"
  become: true
  template:
    src: "rotate.sh.j2"
    dest: "/home/{{ backup_user }}/.local/bin/rotate-backblaze-rclone-key"
    owner: "{{ backup_user }}"
    group: "{{ backup_user }}"
    mode: "0755"

- name: backup rclone config
  shell: cat /home/{{ backup_user }}/.config/rclone/rclone.conf | doppler secrets -p workstation -c {{ backup_host }} set {{ backup_doppler_rclone_config }}

- name: backup rclone filters
  shell: cat /home/{{ backup_user }}/.config/rclone/filters.txt | doppler secrets -p workstation -c {{ backup_host }} set {{ backup_doppler_rclone_filters }}
