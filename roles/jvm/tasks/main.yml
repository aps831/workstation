---
# yamllint disable rule:line-length
- name: Install system packages
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - curl
      - debianutils
      - findutils
      - tar
      - unzip
      - zip

- name: Install java packages
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - openjdk-17-jdk
      - openjdk-21-jdk

- name: Select system java version
  become: true
  community.general.alternatives:
    name: java
    path: /usr/lib/jvm/java-1.21.0-openjdk-amd64/bin/java

- name: Ensure user profile directory exists
  become: true
  ansible.builtin.file:
    dest: /home/{{ ansible_user }}/.profile.d
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"

# maven
- name: Install maven packages
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
  vars:
    packages:
      - maven

# javafx
# https://github.com/gluonhq/substrate/blob/master/README.md
- name: Install javafx packages
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - libasound2-dev
      - libavcodec-dev
      - libavformat-dev
      - libavutil-dev
      - libfreetype6-dev
      - libgl-dev
      - libglib2.0-dev
      - libgtk-3-dev
      - libpango1.0-dev
      - libx11-dev
      - libxtst-dev

# https://www.graalvm.org/22.0/reference-manual/native-image/
- name: Install native image packages
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
    state: present
  vars:
    packages:
      - build-essential
      - libz-dev
      - zlib1g-dev

# gradle
- name: "Check gradle version is present"
  ansible.builtin.shell: "{{ gradle_symlink }} -v | grep {{ gradle_version }}"
  changed_when: false
  register: gradle_version_check
  ignore_errors: true

- when: not gradle_version_check.rc == 0
  block:
    - name: "Install unzip"
      become: true
      ansible.builtin.apt:
        name: "{{ packages }}"
      vars:
        packages:
          - unzip

    - name: Create temporary directory for backup files
      ansible.builtin.tempfile:
        state: directory
        suffix: restore
      register: gradle_tempdir

    - name: "Download gradle"
      ansible.builtin.get_url:
        url: "{{ gradle_download_url }}"
        dest: "{{ gradle_tempdir.path }}/gradle-{{ gradle_version }}"
        checksum: "{{ gradle_checksum }}"

    - name: "Extract gradle {{ gradle_version }}"
      become: true
      ansible.builtin.unarchive:
        src: "{{ gradle_tempdir.path }}/gradle-{{ gradle_version }}"
        dest: "{{ gradle_parent_dir }}"
        remote_src: true

    - name: "Add gradle symlink"
      become: true
      ansible.builtin.file:
        src: "{{ gradle_parent_dir }}/gradle-{{ gradle_version }}/bin/gradle"
        dest: "{{ gradle_symlink }}"
        owner: root
        group: root
        state: link
