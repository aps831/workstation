---
- name: install python
  become: true
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - python3-apt
      - python3-distutils
      - python3-dev
      - python3-venv
      - python3-pip
      - python3-dotenv-cli
      # Python build dependencies required for asdf
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - llvm
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev

# asdf python
- name: install asdf python plugin
  ansible.builtin.shell: >
    bash -c ". /home/{{ ansible_user }}/.asdf/asdf.sh &&
    asdf plugin add python"
  ignore_errors: true

- name: install latest python version
  ansible.builtin.shell: >
    bash -c ". /home/{{ ansible_user }}/.asdf/asdf.sh &&
    asdf install python latest"

- name: set global python version to system
  ansible.builtin.shell: >
    bash -c ". /home/{{ ansible_user }}/.asdf/asdf.sh &&
    asdf global python system"

# pipx
- name: install pipx
  pip:
    name: pipx=={{ pipx_version }}
    extra_args: --user pipx

- name: reshim asdf
  ansible.builtin.shell: >
    bash -c ". /home/{{ ansible_user }}/.asdf/asdf.sh &&
    asdf reshim python"

# poetry
- name: check if poetry is installed
  command: "/home/{{ ansible_user }}/.local/bin/poetry"
  register: poetry_cmd
  changed_when: false
  ignore_errors: true

- name: create temporary file for poetry installer
  tempfile:
    state: file
    suffix: temp
  register: poetry_download_tmp
  when: poetry_cmd is failed

- name: download poetry installer
  get_url:
    url: "{{ poetry_download_url }}"
    dest: "{{ poetry_download_tmp.path }}"
    mode: "0400"
    timeout: 20
  when: poetry_cmd is failed

- name: install poetry
  command: "python3 {{ poetry_download_tmp.path }}"
  when: poetry_cmd is failed

# asdf poetry
- name: install asdf poetry plugin
  ansible.builtin.shell: >
    bash -c ". /home/{{ ansible_user }}/.asdf/asdf.sh &&
    asdf plugin add poetry"
  ignore_errors: true

- name: install latest poetry version
  ansible.builtin.shell: >
    bash -c ". /home/{{ ansible_user }}/.asdf/asdf.sh &&
    asdf install poetry latest"

- name: set global poetry version to system
  ansible.builtin.shell: >
    bash -c ". /home/{{ ansible_user }}/.asdf/asdf.sh &&
    asdf global poetry system"

# If this hangs, try deleting the cache ~/.cache/pypoetry
- name: update poetry
  command: poetry self update --no-interaction
  when: poetry_cmd is not failed

- name: configure poetry
  command: poetry config virtualenvs.prefer-active-python true
  when: poetry_cmd is not failed

# profile
- name: ensure user profile directory exists
  become: true
  ansible.builtin.file:
    dest: /home/{{ ansible_user }}/.profile.d
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755

- name: create temporary file for poetry bash completion
  tempfile:
    state: file
    suffix: temp
  register: poetry_completion_tmp

- name: create poetry bash completion
  shell: "poetry completions bash > {{ poetry_completion_tmp.path }}"
  changed_when: false

- name: define poetry variables
  copy:
    src: "{{ poetry_completion_tmp.path }}"
    dest: "/home/{{ ansible_user }}/.profile.d/poetry.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: 0755
