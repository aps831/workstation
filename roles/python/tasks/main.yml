---
- name: Install python
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
  vars:
    packages:
      - python3-apt
      - python3-dev
      - python3-venv
      - python3-pip
      - pipx
      # Python build dependencies required for asdf
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - llvm
      - libncursesw5-dev
      - xz-utils
      - tk-dev
      - libxml2-dev
      - libxmlsec1-dev
      - libffi-dev
      - liblzma-dev

# pip
- name: Install pip
  community.general.pipx:
    name: pip
    state: latest

# pip-audit
- name: Install pip-audit
  community.general.pipx:
    name: pip-audit
    state: latest

# cookiecutter
- name: Install cookiecutter
  community.general.pipx:
    name: cookiecutter
    state: latest

# safety
- name: Install safety
  community.general.pipx:
    name: safety
    state: latest

# poetry
- name: Install poetry
  community.general.pipx:
    name: poetry
    state: latest

- name: Configure poetry
  ansible.builtin.command: /home/{{ ansible_user }}/.local/bin/poetry config virtualenvs.use-poetry-python true

# profile
- name: Ensure user profile directory exists
  become: true
  ansible.builtin.file:
    dest: /home/{{ ansible_user }}/.profile.d
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0775"

- name: Create temporary file for poetry bash completion
  ansible.builtin.tempfile:
    state: file
    suffix: temp
  register: poetry_completion_tmp

- name: Create poetry bash completion
  ansible.builtin.shell: "/home/{{ ansible_user }}/.local/bin/poetry completions bash > {{ poetry_completion_tmp.path }}"
  changed_when: false

- name: Define poetry variables
  ansible.builtin.copy:
    src: "{{ poetry_completion_tmp.path }}"
    dest: "/home/{{ ansible_user }}/.profile.d/poetry.sh"
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
    remote_src: true
