---
- name: install packages
  become: yes
  apt:
    name: "{{ packages }}"
  vars:
    packages:
      - unzip

# Systemd
- name: create systemd service
  become: yes
  template:
    src: gogs.service.j2
    dest: /etc/systemd/system/gogs.service
    owner: root
    group: root
    mode: 0755
  notify: restart gogs

- name: enable service at boot
  become: yes
  systemd:
    name: gogs
    daemon_reload: yes
    enabled: no

# Install
- name: check if gogs is already installed
  become: yes
  stat:
    path: "{{ gogs_user_home }}/gogs-versions/{{ gogs_version }}"
  register: gogs_installed

- name: create gogs log folder
  become: yes
  file:
    path: "{{ gogs_user_home }}/gogs-log"
    state: directory
    owner: "{{ gogs_user }}"
    group: "{{ gogs_user }}"
    mode: 0755

- name: create gogs data folder
  become: yes
  file:
    path: "{{ gogs_user_home }}/gogs-data"
    state: directory
    owner: "{{ gogs_user }}"
    group: "{{ gogs_user }}"
    mode: 0755

- name: create installation folder
  become: yes
  file:
    path: "{{ gogs_user_home }}/gogs-versions/{{ gogs_version }}"
    state: directory
    owner: "{{ gogs_user }}"
    group: "{{ gogs_user }}"
    mode: 0755

- name: create temporary build directory
  become: yes
  tempfile:
    state: directory
    suffix: build
  register: tmp_dir
  changed_when: false

- name: download gogs
  become: yes
  get_url:
    url: "{{ gogs_download_url }}"
    dest: "{{ tmp_dir.path }}"
  when: not gogs_installed.stat.exists

- name: expand gogs
  become: yes
  unarchive:
    src: "{{ tmp_dir.path }}/{{ gogs_filename }}"
    dest: "{{ gogs_user_home }}/gogs-versions/{{ gogs_version }}/"
    group: "{{ gogs_user }}"
    owner: "{{ gogs_user }}"
    mode: 0744
    remote_src: yes
  when: not gogs_installed.stat.exists

- name: create config folder
  become: yes
  file:
    path: "{{ gogs_user_home }}/gogs-versions/{{ gogs_version }}/gogs/custom/conf/"
    state: directory
    owner: "{{ gogs_user }}"
    group: "{{ gogs_user }}"
    mode: 0755

- name: add custom config
  become: yes
  ansible.builtin.template:
    src: app.ini.j2
    dest: "{{ gogs_user_home }}/gogs-versions/{{ gogs_version }}/gogs/custom/conf/app.ini"
    owner: "{{ gogs_user }}"
    group: "{{ gogs_user }}"
    mode: "0644"

- name: stop service
  become: yes
  systemd:
    name: gogs
    state: stopped
  when: not gogs_installed.stat.exists

- name: symlink gogs binary
  become: yes
  file:
    src: "{{ gogs_user_home }}/gogs/gogs"
    dest: "/usr/local/bin/gogs"
    state: link

- name: symlink gogs folder
  become: yes
  file:
    src: "{{ gogs_user_home }}/gogs-versions/{{ gogs_version }}/gogs"
    dest: "{{ gogs_user_home }}/gogs"
    state: link
  notify: restart gogs
  when: not gogs_installed.stat.exists

- name: start service
  become: yes
  systemd:
    name: gogs
    state: started
  when: not gogs_installed.stat.exists

# Firewall
- name: "allow connections from {{ gogs_ufw_allow_host }}"
  become: yes
  ufw:
    rule: allow
    src: "{{ gogs_ufw_allow_host }}"
    port: "{{ gogs_http_port }}"
