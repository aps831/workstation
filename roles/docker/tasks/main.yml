---
#
# Docker
#
- name: Install packages
  become: true
  ansible.builtin.apt:
    name: "{{ packages }}"
  vars:
    packages:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
      - jq

- name: Add docker signing key
  become: true
  ansible.builtin.get_url:
    url: "https://download.docker.com/linux/ubuntu/gpg"
    dest: /usr/share/keyrings/docker-keyring.asc
    mode: "0644"
    force: true

- name: Add docker repo
  become: true
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-keyring.asc] https://download.docker.com/linux/ubuntu {{ ubuntu_codename }} stable"
    filename: docker
    state: present

- name: Install docker
  become: true
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  notify: Restart docker

- name: Install bash-completion
  become: true
  ansible.builtin.apt:
    name: bash-completion
    state: present

- name: Notify handlers to avoid firewall conflicts
  ansible.builtin.meta: flush_handlers
- name: Ensure docker group exists
  become: true
  ansible.builtin.group:
    name: docker
    state: present

- name: "Ensure docker group contains user '{{ ansible_user }}'"
  become: true
  ansible.builtin.user:
    name: "{{ ansible_user }}"
    groups: docker
    append: true

- name: Ensure docker is enabled at boot
  become: true
  ansible.builtin.systemd:
    name: docker
    daemon_reload: true
    enabled: true

#
# SBOM
#
- name: Docker sbom plugin
  ansible.builtin.shell: curl -sSfL https://raw.githubusercontent.com/docker/sbom-cli-plugin/main/install.sh | sh -s --

#
# Firewall
#
- name: Set default forward policy to accept for firewall
  become: true
  community.general.ufw:
    direction: routed
    default: allow
    route: "yes"
  notify: Reload ufw

- name: Get ip address of docker interface
  ansible.builtin.shell: ifconfig docker0 | grep 'inet ' | awk '{print $2}'
  register: ip
  changed_when: false

- name: Allow connections from docker interface through firewall
  become: true
  community.general.ufw:
    rule: allow
    src: "{{ ip.stdout }}/24"
  notify: Reload ufw

#
# Daemon configuration
#

- name: Docker daemon configuration
  become: true
  environment:
    MIRROR: "http://localhost:5001"
    REGISTRY: "http://registry.local:5000"
  ansible.builtin.shell: |
    set -e
    echo "{}" > /etc/docker/daemon.json
    cat /etc/docker/daemon.json   | jq                             '.dns |= [ "8.8.8.8", "8.8.4.4" ]'        -- > /etc/docker/daemon.json.1
    cat /etc/docker/daemon.json.1 | jq --arg mirror    "$MIRROR"   '."registry-mirrors" |= [ $mirror ]'      -- > /etc/docker/daemon.json.2
    cat /etc/docker/daemon.json.2 | jq --arg registry  "$REGISTRY" '."insecure-registries" |= [ $registry ]' -- > /etc/docker/daemon.json.3
    cat /etc/docker/daemon.json.3 | jq                             '.features.buildkit  |= true'             -- > /etc/docker/daemon.json.4
    rm /etc/docker/daemon.json.1
    rm /etc/docker/daemon.json.2
    rm /etc/docker/daemon.json.3
    mv /etc/docker/daemon.json.4 /etc/docker/daemon.json
  notify: Restart docker

#
# Docker Credential Helper
#
- name: Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
    suffix: build
  register: tmp_dir
  changed_when: false

- name: Download docker credential helper
  become: true
  ansible.builtin.get_url:
    url: "{{ docker_credential_helper_url }}"
    dest: "{{ tmp_dir.path }}"

- name: Unpack docker credential helper
  become: true
  ansible.builtin.unarchive:
    src: "{{ tmp_dir.path }}/{{ docker_credential_helper_filename }}"
    dest: "{{ docker_credential_helper_install_dir }}"
    owner: root
    group: root
    mode: "0755"
    remote_src: true
