---
- name: Create temporary build directory
  ansible.builtin.tempfile:
    state: directory
    suffix: build
  register: tmp_dir
  changed_when: false

- name: Test if ddlog already installed
  ansible.builtin.stat:
    path: /home/{{ ansible_user }}/.ddlog/ddlog-{{ ddlog_version }}
  register: ddlog_result

- name: Create ddlog directory
  ansible.builtin.file:
    path: /home/{{ ansible_user }}/.ddlog/ddlog-{{ ddlog_version }}
    state: directory
    mode: "0755"

- name: Download ddlog distribution
  ansible.builtin.get_url:
    url: "{{ ddlog_download_url }}"
    dest: "{{ tmp_dir.path }}"
  changed_when: false
  when: not ddlog_result.stat.exists

- name: Extract from archive
  become: true
  ansible.builtin.unarchive:
    src: "{{ tmp_dir.path }}/{{ ddlog_filename }}"
    dest: /home/{{ ansible_user }}/.ddlog/ddlog-{{ ddlog_version }}
    extra_opts: [--strip-components=1]
    remote_src: true
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0744"
  when: not ddlog_result.stat.exists

- name: Create symbolic link
  become: true
  ansible.builtin.file:
    src: "/home/{{ ansible_user }}/.ddlog/ddlog-{{ ddlog_version }}"
    dest: "/home/{{ ansible_user }}/.ddlog/ddlog"
    state: link
    mode: "0755"

- name: Ensure user profile directory exists
  become: true
  ansible.builtin.file:
    dest: /home/{{ ansible_user }}/.profile.d
    state: directory
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"

- name: Define ddlog variables
  become: true
  ansible.builtin.template:
    src: user_ddlog.sh.j2
    dest: /home/{{ ansible_user }}/.profile.d/ddlog.sh
    owner: "{{ ansible_user }}"
    group: "{{ ansible_user }}"
    mode: "0755"
